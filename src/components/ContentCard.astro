---
import type { CollectionEntry } from 'astro:content';
import { dateToParts, stringToDate } from 'src/utils/date';

interface Props {
	post: CollectionEntry<"blog"> | CollectionEntry<"research">;
    dateFunc?: (date: Date) => string;
}

const {
    post,
    dateFunc = (date: Date) =>  {
        const { month, day, year } = dateToParts(date);

        return `${month} ${day}, ${year}`;
    }
}: Props = Astro.props;

const link = (post.data.link == "") ? `${post.collection}/${post.slug}` : post.data.link;
---

<style>
.content-card-container {
    justify-self: stretch;
    
    display: flex;
    flex-direction: row;

    justify-content: center;
    min-width: 100%;
}

.content-card {
    aspect-ratio: 1 / 1;
    display: block;

    border-radius: 12px;
    padding: 12px;

    max-width: 512px;
    width: 100%;
    
    text-decoration: none;

    background: var(--red-color);
}

.content-card:hover {
    filter: brightness(1.1);
}

.card-desc, .card-desc > h2 {
    margin: 0;
    padding: 0;
}

h2 {
    margin: 0;
    padding: 0;
}

hr {
    margin: 0.5em 0.5em;
}
</style>
<div class="content-card-container">
    <a
        href={link}

        target={post.data.newTab ? "_blank" : undefined}
        rel={post.data.newTab ? "noopener noreferrer" : undefined}

        class="content-card shadow hovshadow"
    >
        <span class="card-desc">
            <h2><Fragment set:html={post.data.title}/></h2>
            <Fragment set:html={dateFunc(stringToDate(post.data.date))}/>
            { post.data.venue && (
                <Fragment>
                    | <Fragment set:html={post.data.venue}/>
                </Fragment>
            )}
            <hr/>
            <Fragment set:html={post.data.description}/>
            <br/>
        </span>
    </a>
</div>