---
import type { CollectionEntry } from "astro:content";
import { dateToParts, stringToDate } from "src/utils/date";
import { FaExternalLinkAlt } from "react-icons/fa";
import { MdComputer } from "react-icons/md";
import DynamicImage from "./DynamicImage.astro";

interface Props {
	post: CollectionEntry<"blog">;
	id: string;
	dateFunc?: (date: Date) => string;
}

const {
	id,
	post,
	dateFunc = (date: Date) => {
		const { month, day, year } = dateToParts(date);
		const dayStr = day.toString().replace(/^0+/, "");
		return `${month} ${dayStr}, ${year}`;
	},
}: Props = Astro.props;
const link =
	post.data.link == "" ? `${post.collection}/${post.slug}` : post.data.link;
const domain = post.data.newTab ? new URL(link).hostname : null;
---

<div class="content-card-container" id={id}>
	<a
		href={link}
		target={post.data.newTab ? "_blank" : undefined}
		rel={post.data.newTab ? "noopener noreferrer" : undefined}
		class="content-card"
	>
		{
			post.data.newTab && (
				<div class="external-icon">
					<FaExternalLinkAlt size={16} />
				</div>
			)
		}
		<div class="image-container">
			{
				post.data.image === "/images/me.jpg" ? (
					<MdComputer className="default-icon" color="white" />
				) : (
					<DynamicImage
						imagePath={post.data.image}
						altText="Post thumbnail"
						className="card-image"
					/>
				)
			}
		</div>
		<span class="card-desc">
			<div class="tags">
				{
					post.data.tags.map((tag: string) => (
						<span class="tag">{tag}</span>
					))
				}
			</div>
			<h2 class="card-title"><Fragment set:html={post.data.title} /></h2>
			<div class="meta-row">
				<time
					><Fragment
						set:html={dateFunc(stringToDate(post.data.date))}
					/></time
				>
				{
					post.data.venue && (
						<>
							<span class="meta-separator">|</span>
							<span>
								<Fragment set:html={post.data.venue} />
							</span>
						</>
					)
				}
				{
					post.data.authors && (
						<div class="authors">
							{post.data.authors.map(
								(author: string, index: number) => (
									<>
										<span
											class={
												"author" +
												(author == "Gregory Croisdale"
													? " author-greg"
													: "")
											}
										>
											<Fragment set:html={author} />
										</span>
									</>
								)
							)}
						</div>
					)
				}
			</div>
			<p class="card-description">
				<Fragment set:html={post.data.description} />
			</p>
			<div class="card-footer">
				<span class="read-more">Read more</span>
				{
					post.data.newTab && (
						<div class="heads-up">
							<FaExternalLinkAlt
								size={12}
								className="external-link-icon"
							/>
							Opens at {domain}
						</div>
					)
				}
			</div>
		</span>
	</a>
</div>
